# vim: set textwidth=0 wrapmargin=0 :
# See :help UltiSnips, especially section Snippet Options.

###############################################################################
# Generic text editing
###############################################################################

snippet "(\w+)\)" "parenthesis" r
(`!p snip.rv = match.group(1)`$1)$0
endsnippet

snippet ## "comment headline" b
###############################################################################
# ${1:Title}
###############################################################################

endsnippet

###############################################################################
# Imports
###############################################################################

# This snippet has an intentional trailing space.
snippet i "import" b
import 
endsnippet

snippet "import a" "import argparse" br
import argparse
endsnippet

snippet "import n" "import numpy" br
import numpy as np
endsnippet

snippet "import p" "import pyplot" br
import matplotlib.pyplot as plt
endsnippet

snippet "import t" "import tensorflow" br
import tensorflow as tf
endsnippet

snippet "import tfp" "import tensorflow probability" br
import tensorflow_probability as tfp
endsnippet

snippet "import tfd" "import tensorflow probability distributions" br
from tensorflow_probability import distributions as tfd
endsnippet

snippet "import tfl" "import tensorflow keras layers" br
import tensorflow.keras.layers as tfl
endsnippet

###############################################################################
# Lines
###############################################################################

snippet p "print" b
print(${1:${VISUAL}})
endsnippet

snippet -- "print line" b
print('-' * 79)
endsnippet

snippet parser "argparse add parser" b
parser.add_argument('--${1:name}', type=${2:str}, default=${3:None})
endsnippet

snippet r "random state" b
random = np.random.RandomState(${1:seed=0})
endsnippet

snippet boolean "boolean argparse type" b
boolean = lambda x: bool(['False', 'True'].index(x))
endsnippet

###############################################################################
# Blocks
###############################################################################

snippet fig "subplots" b
fig, axes = plt.subplots(ncols=${1:2}, nrows=${2:1}, figsize=($2, $1))
axes = axes.flatten()
$3
fig.tight_layout()
endsnippet

snippet dist "tfd normal" b
mean, rawstd = tf.split(${VISUAL:hidden}, 2, -1)
std = tf.math.softplus(rawstd + 0.55) + 1e-3
${2:dist =} tfd.Independent(tfd.Normal(mean, std), ${1:1})
endsnippet

snippet main "main" b

def main(args):
	pass


if __name__ == '__main__':
	parser = argparse.ArgumentParser()
	main(parser.parse_args())
endsnippet

###############################################################################
# Syntax
###############################################################################

snippet class "class" b
class ${1:Class}:

  def __init__(self, $2):
		${3:pass}

endsnippet

snippet s "private member" b
self._${1:member}
endsnippet

snippet "def __g" "getattr" b
def __getattr__(self, name):
  return getattr(${1:self._inner}, name)
endsnippet

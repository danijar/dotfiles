# vim: set textwidth=0 wrapmargin=0 :
# See :help UltiSnips, especially section Snippet Options.

###############################################################################
# Text editing
###############################################################################

snippet "(\w+)\)" "parenthesis" r
(`!p snip.rv = match.group(1)`$1)$0
endsnippet

###############################################################################
# Imports
###############################################################################

# This snippet has an intentional trailing space.
snippet "i" "import" b
import 
endsnippet

snippet "import a" "import argparse" br
import argparse
endsnippet

snippet "import n" "import numpy" br
import numpy as np
endsnippet

snippet "import p" "import pandas" br
import pandas as pd
endsnippet

snippet "import j" "import jax.numpy" br
import jax.numpy as jnp
endsnippet

snippet "import m" "import matplotlib" br
import matplotlib as mpl
endsnippet

snippet "import pl" "import pyplot" br
import matplotlib.pyplot as plt
endsnippet

###############################################################################
# Lines
###############################################################################

snippet "p" "print" b
print(${1:${VISUAL}})
endsnippet

snippet -- "print line" b
print('-' * 79)
endsnippet

snippet parser "argparse add parser" b
parser.add_argument('--${1:name}', type=${2:str}, default=${3:None})
endsnippet

snippet r "random state" b
random = np.random.RandomState(${1:seed=0})
endsnippet

snippet boolean "boolean argparse type" b
boolean = lambda x: bool(['False', 'True'].index(x))
endsnippet

###############################################################################
# Syntax
###############################################################################

snippet class "class" b
class ${1:Class}:

  def __init__(self, $2):
		${3:pass}

endsnippet

snippet s "private member" b
self._${1:member}
endsnippet

snippet "def __g" "getattr" b
def __getattr__(self, name):
  return getattr(${1:self._inner}, name)
endsnippet
